@page "/counter"

@using SharedUI.Notifications;
@inject INotificationService NotificationService

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    private async void IncrementCount()
    {
        currentCount++;
        await RequestPermission();
        await CreateNotifcationAsync();
    }

        [Inject]
        private ITesting testing { get; set; }

        protected override void OnInitialized()
        {
            testing.Testings();
        }

        //Notofication 

    private bool isSupportedByBrowser;
    private string title = "Blazor Hybrid App";
    private string body = "You are logged in Blazor App ...";
    private string icon = "if not please report";

    protected override async Task OnInitializedAsync()
    {
        isSupportedByBrowser = await NotificationService.IsSupportedByBrowserAsync();

    }

    protected override async void OnAfterRender(bool firstRender)
    {
        await RequestPermission();
        await CreateNotifcationAsync();
    }

    private async Task CreateNotifcationAsync()
    {
        var options = new NotificationOptions
            {
                Body = body,
                Icon = icon,
                Renotify = true // By default a notification is not overwritten, so there can only be one.
            };

        await NotificationService.CreateAsync(title, options);
    }

    private async Task RequestPermission()
    {
        await NotificationService.RequestPermissionAsync();
    }
    

}
